# SmartSpawnPoint Configuration

# Region-based spawns (priority)
region-spawns:
  # Example for "spawn" region
  - region: "spawn"
    # World where this region is located. Use "*" for all worlds.
    region-world: "world"
    # Type: "fixed" for exact coordinates, "random" for random location, "weighted_random" for weighted chances,
    # "none" to just apply actions without teleporting
    type: "fixed"
    # Location where player will respawn
    location:
      world: "world"
      x: 0
      y: 64
      z: 0
      yaw: 0
      pitch: 0
      require-safe: false  # Set to false for known safe locations to improve performance
    # Custom waiting room for this spawn point (optional)
    # Used if require-safe = true and the waiting room system is enabled.
    # The player will be teleported here temporarily while a safe location is being searched asynchronously.
    #
    # ⚠️ Important:
    # - If a valid safe location is not found within the async search timeout,
    #   or the server restarts/crashes during the process, players may remain here indefinitely.
    # - Always ensure players can escape from this room — via NPCs, pressure plates, portals, or other means.
    # - On RPG servers, consider building thematic waiting rooms near friendly towns, shrines, or other story-relevant areas.
    waiting-room:
      world: "world"
      x: 0
      y: 100
      z: 0
      yaw: 0
      pitch: 0
    # Conditions - all must be true for this spawn to be used
    # Note: Players with OP status or "*" permission will automatically pass permission checks
    conditions:
      # Permission conditions with complex logic
      # You can use any combination of && and || operators
      # Note: && has higher precedence than ||, use parentheses to change precedence
      permissions:
        - "smartspawnpoint.vip"  # Simple condition
        - "smartspawnpoint.donor || smartspawnpoint.supporter && smartspawnpoint.vip"  # Complex condition
        # This means: player has donor permission OR (supporter AND vip permissions)
        - "(smartspawnpoint.basic || smartspawnpoint.premium) && smartspawnpoint.region.spawn"
        # This means: player has (basic OR premium) AND region.spawn permissions

      # PlaceholderAPI conditions with complex logic
      # Supported operators: =, ==, !=, >, >=, <, <=
      placeholders:
        - "%player_level% > 10"  # Simple condition
        - "%player_level% > 20 && %vault_eco_fixed% > 1000 || %player_kills% > 50"
        # This means: (level > 20 AND money > 1000) OR kills > 50
        - "(%player_health% > 15 || %player_food% > 18) && %player_world% == world"
        # This means: (health > 15 OR food > 18) AND world is "world"
        - "%player_level% > 30 && (%vault_eco_fixed% > 2000 || %player_kills% > 100 && %player_deaths% < 50)"
        # This means: level > 30 AND (money > 2000 OR (kills > 100 AND deaths < 50))

    # Actions executed on respawn
    actions:
      messages:
        - "You have respawned at the spawn region!"
      commands:
        - command: "effect give %player% minecraft:resistance 30 1"
          chance: 100  # 100% chance to execute

        - command: "give %player% minecraft:golden_apple 1"
          chance: 50   # 50% chance to execute
          # Complex conditional chances
          chance-conditions:
            - type: "permission"
              value: "smartspawnpoint.vip || smartspawnpoint.donor && smartspawnpoint.supporter"
              # This means: VIP OR (donor AND supporter)
              weight: 80
            - type: "placeholder"
              value: "%player_level% > 20 && (%vault_eco_fixed% > 500 || %player_kills% > 30)"
              # This means: level > 20 AND (money > 500 OR kills > 30)
              weight: 100

        - command: "give %player% minecraft:golden_apple 2"
          chance: 25   # 25% chance to execute
          chance-conditions:
            - type: "permission"
              value: "(smartspawnpoint.vip || smartspawnpoint.premium) && smartspawnpoint.special"
              # This means: (VIP OR premium) AND special permission
              weight: 40
            - type: "placeholder"
              value: "(%player_level% > 20 || %player_kills% > 10) && %player_world% == world && %player_health% < 10"
              # This means: (level > 20 OR kills > 10) AND world is "world" AND health < 10
              weight: 50

  # Example for PvP arena with disabled party respawn
  - region: "pvp_arena"
    region-world: "*"  # Will work in any world
    type: "random"
    # Disable party respawn in this region
    party-respawn-disabled: true
    location:
      world: "world"
      min-x: -100
      max-x: 100
      min-y: 64
      max-y: 80
      min-z: -100
      max-z: 100
      require-safe: false  # Disable safe location check for better performance
    # Custom waiting room (only used if require-safe is true)
    waiting-room:
      world: "world"
      x: 0
      y: 90
      z: 0

  # Example for wilderness region with mixed location types
  - region: "wilderness"
    region-world: "world"
    type: "weighted_random"
    locations:
      # Fixed location with 70% chance
      - type: "fixed"
        location:
          world: "world"
          x: 100
          y: 64
          z: 100
          require-safe: false
        weight: 70  # 70% chance
        weight-conditions:
          - type: "permission"
            value: "smartspawnpoint.safe"
            weight: 90  # 90% chance for players with this permission
        # Custom waiting room for this specific location option
        waiting-room:
          world: "world"
          x: 200
          y: 100
          z: 200
          yaw: 90
          pitch: 0
      # Random location with 30% chance
      - type: "random"
        location:
          world: "world"
          min-x: -200
          max-x: -100
          min-y: 64
          max-y: 80
          min-z: -200
          max-z: -100
          require-safe: false
        weight: 30  # 30% chance
        weight-conditions:
          - type: "permission"
            value: "smartspawnpoint.adventure"
            weight: 60  # 60% chance for adventure players
        # Custom waiting room for this specific location option
        waiting-room:
          world: "world"
          x: 300
          y: 100
          z: 300

  # Example for RPG adventure zone with location-specific actions
  - region: "adventure_zone"
    region-world: "*"  # Works in any world
    type: "weighted_random"
    locations:
      - type: "fixed"
        location:
          world: "forest"
          x: 150
          y: 70
          z: 150
          require-safe: false
        weight: 50  # 50% chance
      - type: "fixed"
        location:
          world: "desert"
          x: 150
          y: 70
          z: 150
          require-safe: false
        weight: 50  # 50% chance
    actions:
      commands:
        # Apply slowness effect only in the forest world for non-VIPs
        # Combines two conditions into one with logical operators
        - command: "effect give %player% minecraft:slowness 60 2"
          chance: 0
          chance-conditions:
            - type: "placeholder"
              value: "%player_world% == forest && !%player_has_permission:smartspawnpoint.vip%"
              # Only in forest world AND player does NOT have VIP permission
              weight: 100

        # VIPs get night vision in all worlds, non-VIPs only in forest
        # Combines two conditions into one with logical operators
        - command: "effect give %player% minecraft:night_vision 300 1"
          chance: 0
          chance-conditions:
            - type: "placeholder"
              value: "%player_has_permission:smartspawnpoint.vip% || %player_world% == forest"
              # Player is VIP OR in forest world
              weight: 100

        # Apply fire resistance in the desert world for everyone
        - command: "effect give %player% minecraft:fire_resistance 120 1"
          chance: 0
          chance-conditions:
            - type: "placeholder"
              value: "%player_world% == desert"
              weight: 100

        # VIPs get speed boost in all worlds, non-VIPs only in desert
        # Combines two conditions into one with logical operators
        - command: "effect give %player% minecraft:speed 120 1"
          chance: 0
          chance-conditions:
            - type: "placeholder"
              value: "%player_has_permission:smartspawnpoint.vip% || %player_world% == desert"
              # Player is VIP OR in desert world
              weight: 100

        # Apply special effects based on WorldGuard regions
        - command: "effect give %player% minecraft:haste 120 1"
          chance: 0
          chance-conditions:
            - type: "placeholder"
              value: "%worldguard_region_name% == mining_zone"
              weight: 100

  # Example for a spawn point that only executes actions without teleporting
  - region: "action_region"
    region-world: "world"
    type: "none"  # Don't teleport, just run actions
    actions:
      messages:
        - "You died in the action region! No teleport, just this message."
      commands:
        - command: "effect give %player% minecraft:regeneration 10 1"
          chance: 100
        # Example with multiple commands with different chances
        - command: "give %player% minecraft:cooked_beef 1"
          chance: 100  # Always give food
        - command: "give %player% minecraft:golden_apple 1"
          chance: 10   # 10% chance for golden apple
        - command: "give %player% minecraft:enchanted_golden_apple 1"
          chance: 1    # 1% chance for enchanted golden apple
          chance-conditions:
            - type: "permission"
              value: "smartspawnpoint.vip"
              weight: 5  # 5% chance for VIP players

# World-based spawns (secondary priority)
world-spawns:
  # Default world
  - world: "world"
    type: "fixed"
    location:
      x: 0
      y: 64
      z: 0
      require-safe: false
    # Custom waiting room for this world spawn
    waiting-room:
      world: "world"
      x: 0
      y: 120
      z: 0
    actions:
      messages:
        - "You have respawned in the overworld!"
      commands:
        - command: "effect give %player% minecraft:regeneration 5 1"
          chance: 100
        - command: "give %player% minecraft:bread 3"
          chance: 100

  # Nether world example with mixed location types and disabled party respawn
  - world: "world_nether"
    type: "weighted_random"
    # Disable party respawn in this world
    party-respawn-disabled: true
    locations:
      # Option 1: Return to main world
      - type: "fixed"
        location:
          world: "world"
          x: 0
          y: 64
          z: 0
          require-safe: false
        weight: 80
        # Custom waiting room for this specific location option
        waiting-room:
          world: "world"
          x: 100
          y: 90
          z: 100
      # Option 2: Random location in the nether (more dangerous)
      - type: "random"
        location:
          world: "world_nether"
          min-x: -100
          max-x: 100
          min-y: 30
          max-y: 100
          min-z: -100
          max-z: 100
          require-safe: true
        weight: 20
        weight-conditions:
          - type: "permission"
            value: "smartspawnpoint.nether"
            weight: 50  # Higher chance for players with nether permission
        # Custom waiting room for this specific location option
        waiting-room:
          world: "world_nether"
          x: 0
          y: 100
          z: 0
    # Custom waiting room for the whole spawn point (used if no custom location waiting room)
    waiting-room:
      world: "world"
      x: 0
      y: 150
      z: 0
    actions:
      messages:
        - "You died in the Nether!"
      commands:
        - command: "effect give %player% minecraft:fire_resistance 60 1"
          chance: 100
        - command: "give %player% minecraft:golden_carrot 2"
          chance: 50
          chance-conditions:
            - type: "permission"
              value: "smartspawnpoint.nether"
              weight: 100  # 100% chance for nether players

  # End world example
  - world: "world_the_end"
    type: "fixed"
    location:
      world: "world"  # Respawn in overworld
      x: 0
      y: 64
      z: 0
      require-safe: false
    # Custom waiting room
    waiting-room:
      world: "world"
      x: 0
      y: 150
      z: 0
    actions:
      messages:
        - "You died in the End! Respawning in the overworld..."
      commands:
        - command: "effect give %player% minecraft:slow_falling 30 1"
          chance: 100
        - command: "effect give %player% minecraft:night_vision 30 1"
          chance: 70
        - command: "clear %player%" # Clear inventory on death in End
          chance: 10 # 10% chance to lose all items
          chance-conditions:
            - type: "permission"
              value: "smartspawnpoint.end.protect"
              weight: 0 # 0% chance for players with protection permission

# General settings
settings:
  # Maximum attempts to find safe location for random spawns
  max-safe-location-attempts: 20

  # Radius to search for safe locations (smaller = better performance)
  safe-location-radius: 5

  # Enable debug mode for detailed logs
  debug-mode: true

  # Force a delayed teleport even if respawn event has been processed
  force-delayed-teleport: true

  # Waiting room settings
  # The waiting room system helps reduce lag by allowing the plugin to search for
  # safe spawn locations asynchronously. When a player dies and requires a safe location,
  # they'll be temporarily teleported to the waiting room while the plugin searches
  # for an appropriate safe location in the background.
  #
  # You can specify waiting rooms at three levels of precedence:
  # 1. Individual weighted location waiting room (highest priority)
  # 2. Spawn point waiting room (used if no location-specific room)
  # 3. Global waiting room (lowest priority, used as fallback)
  #
  # ⚠️ Players may stay here permanently if the plugin fails to find a valid safe location within the search timeout.
  # Always ensure this location is not a trap and provides an escape option.
  waiting-room:
    # Enable the waiting room system - recommended if you use require-safe: true anywhere
    enabled: true

    # Timeout for async safe location search (seconds)
    # If a safe location isn't found within this time, player stays in waiting room
    async-search-timeout: 5

    # Global waiting room location (used if no custom waiting room is specified)
    location:
      world: "world"
      x: 0
      y: 100
      z: 0
      yaw: 0
      pitch: 0

  # Party system settings
  # The party system allows players to form groups and respawn near each other after death.
  party:
    # Enable party system
    enabled: true

    # Maximum number of players in a party
    # Set to 0 for unlimited
    max-size: 10

    # Maximum distance for party respawn (blocks)
    # Set to 0 for unlimited distance
    max-respawn-distance: 0

    # Cooldown between party respawn for same player (seconds)
    # Set to 0 for no cooldown
    respawn-cooldown: 0

    # "Walking Spawn Point" feature
    # Players with this permission will respawn at their death location
    # and serve as spawn points for other party members
    # This is useful for content creators or special players
    respawn-at-death:
      enabled: true
      permission: "smartspawnpoint.party.respawnatdeath"
      message: "&8[&4Death&8] &7You have risen at your death location as a &cwalking spawn point&7."

      # How walking spawn point interacts with restrictions
      restriction-behavior:
        # Whether walking spawn point should respect party-respawn-disabled areas
        respect-restrictions: true

        # What to do when walking spawn point player dies in restricted area
        # Options: "deny", "allow", "fallback_to_party", "fallback_to_normal_spawn"
        restricted-area-behavior: "deny"

        # Whether to check both death location and target location restrictions
        check-death-location: true
        check-target-location: false

        # Custom message when walking spawn point is denied due to restrictions
        restricted-message: "&8[&4Death&8] &cDark forces prevent you from rising here..."

    # Party respawn behavior control
    respawn-behavior:
      # Check dying player's location for restrictions
      check-death-location: true

      # Check target player's location for restrictions
      check-target-location: true

      # What to do when only death location is restricted
      # Options: "allow", "deny", "fallback_to_normal_spawn"
      death-restricted-behavior: "deny"

      # What to do when only target location is restricted
      # Options: "allow", "deny", "find_other_member"
      target-restricted-behavior: "deny"

      # What to do when both locations are restricted
      both-restricted-behavior: "deny"

      # Try to find alternative party members if target is in restricted area
      find-alternative-target: true

      # Maximum attempts to find alternative party member
      alternative-target-attempts: 3

      # Target selection strategy
      target-selection:
        # Primary strategy: "closest_same_world", "closest_any_world", "most_members_world",
        # "most_members_region", "random", "leader_priority", "specific_target_only"
        primary-strategy: "closest_same_world"

        # Fallback strategy if primary fails
        fallback-strategy: "closest_any_world"

        # Whether to prefer players in same world
        prefer-same-world: true

        # Whether to prefer party leader over other members
        prefer-leader: false

        # Whether to consider world population when selecting target
        consider-world-population: false

        # Whether to consider region population when selecting target
        consider-region-population: false

        # Minimum members required in a world/region to prefer it
        min-population-threshold: 2

        # Maximum attempts to find alternative target
        max-alternative-attempts: 3

    # Invitation expiry time (seconds)
    invitation-expiry: 60

    # Message settings
    messages:
      # Colors: You can use '&' for color codes
      prefix: "&8[&4Death Party&8] &r"
      invite-sent: "&7Soul bond invitation sent to &c%player%"
      invite-received: "&7%player% &7invites you to join their &4death party&7. Type &f/smartspawnpoint party accept &7to bind your souls"
      invite-declined: "&c%player% &7has rejected the soul bond"
      invite-expired: "&7The soul bond invitation has faded into darkness"
      party-joined: "&c%player% &7has joined your death party!"
      party-left: "&7%player%'s &7soul has departed from the party"
      player-kicked: "&c%player% &7has been cast out from the death party"
      player-not-found: "&7Lost soul not found or wandering offline"
      not-in-party: "&7Your soul walks alone in darkness"
      not-leader: "&cOnly the death party leader can command the souls"
      player-not-in-party: "&cThis soul is not bound to your death party"
      leader-changed: "&c%player% &7now commands the death party"
      party-disbanded: "&7The death party has dissolved into the void"
      respawned-at-member: "&7Your soul has been drawn to &c%player%'s &7essence"
      respawn-mode-changed: "&7Death party binding changed to: &c%mode%"
      respawn-target-set: "&7Your soul will now seek &c%player% &7in death"
      respawn-disabled-region: "&cThe necromantic bonds are severed in this sacred ground"
      respawn-disabled-world: "&cDeath party bonds cannot pierce this realm's barriers"
      respawn-cooldown: "&7Your soul must rest for &c%time% &7seconds before the next summoning"

  # List of materials considered unsafe (will avoid spawning on these)
  unsafe-materials:
    - "LAVA"
    - "FIRE"
    - "CACTUS"
    - "WATER"
    - "AIR"
    - "MAGMA_BLOCK"
    - "CAMPFIRE"
    - "SOUL_CAMPFIRE"
    - "WITHER_ROSE"
    - "SWEET_BERRY_BUSH"

  command-messages:
    main-help-header: "&8[&4SmartSpawnPoint&8] &7Available necromantic arts:"
    main-help-reload: "&7» &f/ssp reload &8- &7Reload the &cdark configuration"
    main-help-party: "&7» &f/ssp party &8- &7Soul binding &ccommands"

    party-help-header: "&8[&4Soul Binding&8] &7Available death party commands:"
    party-help-invite: "&7» &f/ssp party invite &8<&csoul&8> &8- &7Bind a soul to your &cdeath party"
    party-help-accept: "&7» &f/ssp party accept &8- &7Accept a &csoul bond &7invitation"
    party-help-deny: "&7» &f/ssp party deny &8- &7Reject a &csoul bond &7invitation"
    party-help-leave: "&7» &f/ssp party leave &8- &7Sever your soul from the &cdeath party"
    party-help-list: "&7» &f/ssp party list &8- &7View all &cbound souls"
    party-help-remove: "&7» &f/ssp party remove &8<&csoul&8> &8- &7Cast out a soul from your &cdeath party"
    party-help-setleader: "&7» &f/ssp party setleader &8<&csoul&8> &8- &7Transfer &cdark leadership"
    party-help-options: "&7» &f/ssp party options &8- &7Configure &csoul binding &7options"

    unknown-command: "&8[&4Error&8] &cUnknown necromantic command. &7Use &f/ssp &7for guidance."
    party-disabled: "&8[&4Error&8] &cSoul binding is forbidden in this realm."
